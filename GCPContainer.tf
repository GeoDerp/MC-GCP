# This Terraform template was autogenerated by Google Cload Platform, then modified to tweak parameters 
# it is recommended to make a new VPC network (and change from defult) if you use this GCP project for more then just the Minecraft Server (for security)
# <EMAILID>, <REGIONID>, <CONTAINERED> and <MYPROJECTID> has been redacted to increase personal security 
# This code is compatible with Terraform 4.25.0 and versions that are backwards compatible to 4.25.0.
# For information about validating this Terraform code, see https://developer.hashicorp.com/terraform/tutorials/gcp-get-started/google-cloud-platform-build#format-and-validate-the-configuration

#set static ip
resource "google_compute_address" "default" {
  name   = "my-static-mc-ip"
  region = "<REGION>"
}

#create firewall rules 
resource "google_compute_firewall" "rules" {
  name        = "tcp-mc-server-port-rule"
  network     = "default"
  description = "opens mc server port tcp"

  allow {
    protocol = "tcp"
    ports    = ["25565", "25565"]
  }

  source_ranges = ["0.0.0.0/0"]
}

# create udp firewall rules (optional)
# resource "google_compute_firewall" "rules" {
#   name        = "udp-mc-server-port-rule"
#   network     = "default"
#   description = "opens mc server port udp"

#   allow {
#     protocol = "udp"
#     ports    = ["25565", "25565"]
#   }

#   source_ranges = ["0.0.0.0/0"]
# }

# create GCP VM
resource "google_compute_instance" "my-mc-server-1" {
  boot_disk {
    auto_delete = false
    device_name = "my-mc-server"

    initialize_params {
      image = "projects/cos-cloud/global/images/<CONTAINERED>"
      size  = 10
      type  = "pd-balanced"
    }

    mode = "READ_WRITE"
  }

  can_ip_forward      = false
  deletion_protection = false
  enable_display      = false

  labels = {
    container-vm = "<CONTAINERED>"
    goog-ec-src  = "vm_add-tf"
  }

  machine_type = "e2-standard-2"

  metadata = {
    gce-container-declaration = "spec:\n  containers:\n  - name: my-mc-server-1\n    image: docker.io/itzg/minecraft-server\n    env:\n    - name: EULA\n      value: 'TRUE'\n   - name: ENABLE_AUTOSTOP\n      value: TRUE\n - name: TYPE\n      value: MODRINTH\n    - name: MODRINTH_PROJECT\n      value: O8OAvFdJ\n    - name: MODRINTH_PROJECTS\n      value: 8oi3bsk5,D53qveoj,Ys1mdL6V,4im8hCxA\n    - name: MEMORY\n      value: 6G\n    - name: OPS\n      value: GeoTheNoodle\n    volumeMounts:\n    - name: host-path-0\n      readOnly: false\n      mountPath: /data\n    securityContext:\n      privileged: true\n    stdin: true\n    tty: true\n  volumes:\n  - name: host-path-0\n    hostPath:\n      path: /home/data/mc\n  restartPolicy: Always\n# This container declaration format is not public API and may change without notice. Please\n# use gcloud command-line tool or Google Cloud Console to run Containers on Google Compute Engine."
    google-logging-enabled    = "true"
    startup-script            = "git clone https://github.com/GeoDerp/MC-GCP && cd MC-GCP && sleep 5 && chmod +x run.sh && ./run.sh"
  }

  name = "my-mc-server-1"

  network_interface {
    network = "default"
    access_config {
      network_tier = "PREMIUM" 
      nat_ip = google_compute_address.default.address
    }

    subnetwork = "projects/<MYPROJECTID>/regions/<REGION>/subnetworks/default"
  }

  scheduling {
    automatic_restart   = false
    on_host_maintenance = "MIGRATE" #set to "TERMINATE" to significantly decrease cost but increase likleyhood of random server stops
    preemptible         = false
    provisioning_model  = "STANDARD" #set to "SPOT" to segnificatnly decrease cost but increase likleyhood of random server stops
  }

  service_account {
    email  = "<EMAILID>@developer.gserviceaccount.com"
    scopes = ["https://www.googleapis.com/auth/devstorage.read_only", "https://www.googleapis.com/auth/logging.write", "https://www.googleapis.com/auth/monitoring.write", "https://www.googleapis.com/auth/service.management.readonly", "https://www.googleapis.com/auth/servicecontrol", "https://www.googleapis.com/auth/trace.append"]
  }

  shielded_instance_config {
    enable_integrity_monitoring = true
    enable_secure_boot          = false
    enable_vtpm                 = true
  }

  zone = "<REGION>-a"
}
